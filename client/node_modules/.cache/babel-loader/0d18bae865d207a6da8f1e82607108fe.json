{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDiuP5b4-1NdMb40x1SxMw2Dq_18wsr6fY\",\n  authDomain: \"crwn-db-cebc8.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-cebc8.firebaseio.com\",\n  projectId: \"crwn-db-cebc8\",\n  storageBucket: \"crwn-db-cebc8.appspot.com\",\n  messagingSenderId: \"1091996503829\",\n  appId: \"1:1091996503829:web:fb6bc5f5a24edca17e631c\",\n  measurementId: \"G-GSPZE03FHT\"\n};\nexport const createUserProfileDocument = async (userAuth, secondUser, thirdUser) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    console.log(userAuth);\n    console.log(secondUser);\n    console.log(thirdUser);\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n}; //Initializing the configuration of forebase\n\nfirebase.initializeApp(config); //exporting the auth object that holds the sign in data\n\nexport const auth = firebase.auth(); //exporting the firestore service to help store and retrieve data from the database\n\nexport const firestore = firebase.firestore(); //Calling google sign in pop up\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/SEWA/Desktop/Udemy Courses/React/cwn-clothing/src/Firebase/Firebase.Utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","secondUser","thirdUser","userRef","firestore","doc","uid","snapShot","get","exists","console","log","displayName","email","createdAt","Date","set","additionalData","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACPC,EAAAA,MAAM,EAAE,yCADD;AAEPC,EAAAA,UAAU,EAAE,+BAFL;AAGPC,EAAAA,WAAW,EAAE,sCAHN;AAIPC,EAAAA,SAAS,EAAE,eAJJ;AAKPC,EAAAA,aAAa,EAAE,2BALR;AAMPC,EAAAA,iBAAiB,EAAE,eANZ;AAOPC,EAAAA,KAAK,EAAE,4CAPA;AAQPC,EAAAA,aAAa,EAAE;AARR,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,UAAhB,EAA2BC,SAA3B,KAAyC;AAE1E,MAAG,CAACF,QAAJ,EAAc;AAEd,QAAMG,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,UAASL,QAAQ,CAACM,GAAI,EAArC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AAEA,UAAM;AAACU,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBb,QAA7B;AAEA,UAAMc,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACI,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACZJ,QAAAA,WADY;AAEZC,QAAAA,KAFY;AAGZC,QAAAA,SAHY;AAIZ,WAAGG;AAJS,OAAZ,CAAN;AAMP,KAPD,CAOE,OAAOC,KAAP,EAAc;AACRR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACP;AACR;;AACD,SAAOhB,OAAP;AACP,CA5BM,C,CA8BP;;AACAd,QAAQ,CAAC+B,aAAT,CAAuB9B,MAAvB,E,CAEA;;AACA,OAAO,MAAM+B,IAAI,GAAGhC,QAAQ,CAACgC,IAAT,EAAb,C,CAEP;;AACA,OAAO,MAAMjB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB,C,CAEP;;AACA,MAAMkB,QAAQ,GAAG,IAAIjC,QAAQ,CAACgC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAC;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAejC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n        apiKey: \"AIzaSyDiuP5b4-1NdMb40x1SxMw2Dq_18wsr6fY\",\r\n        authDomain: \"crwn-db-cebc8.firebaseapp.com\",\r\n        databaseURL: \"https://crwn-db-cebc8.firebaseio.com\",\r\n        projectId: \"crwn-db-cebc8\",\r\n        storageBucket: \"crwn-db-cebc8.appspot.com\",\r\n        messagingSenderId: \"1091996503829\",\r\n        appId: \"1:1091996503829:web:fb6bc5f5a24edca17e631c\",\r\n        measurementId: \"G-GSPZE03FHT\"\r\n};\r\n\r\nexport const createUserProfileDocument = async(userAuth, secondUser,thirdUser) => {\r\n\r\n        if(!userAuth) return;\r\n        \r\n        const userRef = firestore.doc(`/users/${userAuth.uid}`);\r\n        const snapShot = await userRef.get();\r\n\r\n        if(!snapShot.exists){\r\n                console.log(userAuth);\r\n                console.log(secondUser);\r\n                console.log(thirdUser);\r\n                \r\n                const {displayName, email} = userAuth;\r\n\r\n                const createdAt = new Date();\r\n                \r\n                try {\r\n                        await userRef.set({\r\n                              displayName,\r\n                              email,\r\n                              createdAt,\r\n                              ...additionalData  \r\n                        })\r\n                } catch (error) {\r\n                        console.log(\"Error creating user\", error.message);\r\n                }\r\n        }\r\n        return userRef;\r\n}\r\n\r\n//Initializing the configuration of forebase\r\nfirebase.initializeApp(config);\r\n\r\n//exporting the auth object that holds the sign in data\r\nexport const auth = firebase.auth();\r\n\r\n//exporting the firestore service to help store and retrieve data from the database\r\nexport const firestore = firebase.firestore();\r\n\r\n//Calling google sign in pop up\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt:'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}