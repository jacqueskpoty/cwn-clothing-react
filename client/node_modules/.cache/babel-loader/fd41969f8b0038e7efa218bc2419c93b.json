{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga';\nimport CollectionTypes from './Collection.Type';\nimport { transformCollectionMap, firestore } from '../../Firebase/Firebase.Utils';\nexport function* UpdateCollectionsDataSagaAsync() {\n  console.log(\"im saga\"); // try {\n  //     collectionRef = firestore.collection('collections');\n  //     snapshot = yield collectionRef.get();\n  //     collections = yield transformCollectionMap(snapshot);\n  //     yield put(UpdateCollectionsDataSuccess(collections));   \n  // } catch (error) {\n  //     put(UpdateCollectionsDataFailed(error));\n  // }\n}\nexport function* UpdateCollectionsDataSaga() {\n  yield takeEvery(CollectionTypes.FETHCING_SHOP_DATA_START, UpdateCollectionsDataAsync);\n}","map":{"version":3,"sources":["C:/Users/SEWA/Desktop/Udemy Courses/React/cwn-clothing/src/Redux/Collection/Collection.Sagas.js"],"names":["takeEvery","call","put","CollectionTypes","transformCollectionMap","firestore","UpdateCollectionsDataSagaAsync","console","log","UpdateCollectionsDataSaga","FETHCING_SHOP_DATA_START","UpdateCollectionsDataAsync"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAmC,YAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,sBAAT,EAAgCC,SAAhC,QAAiD,+BAAjD;AAGA,OAAO,UAAUC,8BAAV,GAA0C;AAE7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAF6C,CAI7C;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEH;AAED,OAAO,UAAUC,yBAAV,GAAqC;AACxC,QAAMT,SAAS,CAACG,eAAe,CAACO,wBAAjB,EAA2CC,0BAA3C,CAAf;AACH","sourcesContent":["import { takeEvery,call,put } from 'redux-saga';\r\nimport CollectionTypes from './Collection.Type';\r\nimport { transformCollectionMap,firestore } from '../../Firebase/Firebase.Utils';\r\n\r\n\r\nexport function* UpdateCollectionsDataSagaAsync(){\r\n\r\n    console.log(\"im saga\");\r\n\r\n    // try {\r\n    //     collectionRef = firestore.collection('collections');\r\n    //     snapshot = yield collectionRef.get();\r\n    //     collections = yield transformCollectionMap(snapshot);\r\n                \r\n    //     yield put(UpdateCollectionsDataSuccess(collections));   \r\n        \r\n    // } catch (error) {\r\n    //     put(UpdateCollectionsDataFailed(error));\r\n    // }\r\n     \r\n}\r\n\r\nexport function* UpdateCollectionsDataSaga(){\r\n    yield takeEvery(CollectionTypes.FETHCING_SHOP_DATA_START, UpdateCollectionsDataAsync);\r\n}"]},"metadata":{},"sourceType":"module"}