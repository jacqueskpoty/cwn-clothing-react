{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport CollectionTypes from './Collection.Type';\nimport { transformCollectionMap, firestore } from '../../Firebase/Firebase.Utils';\nexport function* UpdateCollectionsDataSagaAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collections = yield transformCollectionMap(snapshot);\n    yield put(UpdateCollectionsDataSuccess(collections));\n  } catch (error) {\n    put(UpdateCollectionsDataFailed(error));\n  }\n}\nexport function* UpdateCollectionsDataSaga() {\n  yield takeEvery(CollectionTypes.FETHCING_SHOP_DATA_START, UpdateCollectionsDataSagaAsync);\n}","map":{"version":3,"sources":["C:/Users/SEWA/Desktop/Udemy Courses/React/cwn-clothing/src/Redux/Collection/Collection.Sagas.js"],"names":["takeEvery","call","put","CollectionTypes","transformCollectionMap","firestore","UpdateCollectionsDataSagaAsync","collectionRef","collection","snapshot","get","collections","UpdateCollectionsDataSuccess","error","UpdateCollectionsDataFailed","UpdateCollectionsDataSaga","FETHCING_SHOP_DATA_START"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAmC,oBAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,sBAAT,EAAgCC,SAAhC,QAAiD,+BAAjD;AAGA,OAAO,UAAUC,8BAAV,GAA0C;AAE7C,MAAI;AACA,UAAMC,aAAa,GAAGF,SAAS,CAACG,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMP,sBAAsB,CAACK,QAAD,CAAhD;AAEA,UAAMP,GAAG,CAACU,4BAA4B,CAACD,WAAD,CAA7B,CAAT;AAEH,GAPD,CAOE,OAAOE,KAAP,EAAc;AACZX,IAAAA,GAAG,CAACY,2BAA2B,CAACD,KAAD,CAA5B,CAAH;AACH;AAEJ;AAED,OAAO,UAAUE,yBAAV,GAAqC;AACxC,QAAMf,SAAS,CACKG,eAAe,CAACa,wBADrB,EAEKV,8BAFL,CAAf;AAIH","sourcesContent":["import { takeEvery,call,put } from 'redux-saga/effects';\r\nimport CollectionTypes from './Collection.Type';\r\nimport { transformCollectionMap,firestore } from '../../Firebase/Firebase.Utils';\r\n\r\n\r\nexport function* UpdateCollectionsDataSagaAsync(){\r\n\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collections = yield transformCollectionMap(snapshot);\r\n                \r\n        yield put(UpdateCollectionsDataSuccess(collections));   \r\n        \r\n    } catch (error) {\r\n        put(UpdateCollectionsDataFailed(error));\r\n    }\r\n     \r\n}\r\n\r\nexport function* UpdateCollectionsDataSaga(){\r\n    yield takeEvery(\r\n                        CollectionTypes.FETHCING_SHOP_DATA_START, \r\n                        UpdateCollectionsDataSagaAsync\r\n                    );\r\n}"]},"metadata":{},"sourceType":"module"}