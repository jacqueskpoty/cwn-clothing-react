{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDiuP5b4-1NdMb40x1SxMw2Dq_18wsr6fY\",\n  authDomain: \"crwn-db-cebc8.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-cebc8.firebaseio.com\",\n  projectId: \"crwn-db-cebc8\",\n  storageBucket: \"crwn-db-cebc8.appspot.com\",\n  messagingSenderId: \"1091996503829\",\n  appId: \"1:1091996503829:web:fb6bc5f5a24edca17e631c\",\n  measurementId: \"G-GSPZE03FHT\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n}; //Initializing the configuration of forebase\n\nfirebase.initializeApp(config); //exporting the auth object that holds the sign in data\n\nexport const auth = firebase.auth(); //exporting the firestore service to help store and retrieve data from the database\n\nexport const firestore = firebase.firestore(); //Calling google sign in pop up\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //add collection to firestore\n\nexport const addCollectionsAndDocuments = async (collectionKey, collectionToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  collectionToAdd.forEach(obj => {\n    const documentRef = collectionRef.doc();\n    batch.set(documentRef, obj);\n  });\n  return await batch.commit();\n}; //transform collections fetched from database\n\nexport const transformCollectionMap = collections => {\n  console.log(collections);\n  const collectionMap = collections.doc.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data;\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return collectionMap.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/SEWA/Desktop/Udemy Courses/React/cwn-clothing/src/Firebase/Firebase.Utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","addCollectionsAndDocuments","collectionKey","collectionToAdd","collectionRef","collection","batch","forEach","obj","documentRef","commit","transformCollectionMap","collections","collectionMap","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n        apiKey: \"AIzaSyDiuP5b4-1NdMb40x1SxMw2Dq_18wsr6fY\",\r\n        authDomain: \"crwn-db-cebc8.firebaseapp.com\",\r\n        databaseURL: \"https://crwn-db-cebc8.firebaseio.com\",\r\n        projectId: \"crwn-db-cebc8\",\r\n        storageBucket: \"crwn-db-cebc8.appspot.com\",\r\n        messagingSenderId: \"1091996503829\",\r\n        appId: \"1:1091996503829:web:fb6bc5f5a24edca17e631c\",\r\n        measurementId: \"G-GSPZE03FHT\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\r\n        if(!userAuth) return;\r\n        \r\n        const userRef = firestore.doc(`/users/${userAuth.uid}`);\r\n        const snapShot = await userRef.get();\r\n        if(!snapShot.exists){                \r\n                const {displayName, email} = userAuth;\r\n\r\n                const createdAt = new Date();\r\n                \r\n                try {\r\n                        await userRef.set({\r\n                              displayName,\r\n                              email,\r\n                              createdAt,\r\n                              ...additionalData  \r\n                        })\r\n                } catch (error) {\r\n                        console.log(\"Error creating user\", error.message);\r\n                }\r\n        }\r\n        return userRef;\r\n}\r\n\r\n//Initializing the configuration of forebase\r\nfirebase.initializeApp(config);\r\n\r\n//exporting the auth object that holds the sign in data\r\nexport const auth = firebase.auth();\r\n\r\n//exporting the firestore service to help store and retrieve data from the database\r\nexport const firestore = firebase.firestore();\r\n\r\n//Calling google sign in pop up\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt:'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n//add collection to firestore\r\nexport const addCollectionsAndDocuments = async(collectionKey, collectionToAdd) => {\r\n        const collectionRef = firestore.collection(collectionKey);\r\n\r\n        const batch = firestore.batch();\r\n        \r\n        collectionToAdd.forEach(obj => {\r\n            const documentRef = collectionRef.doc();\r\n            batch.set(documentRef,obj);               \r\n        })\r\n        return await batch.commit();\r\n}\r\n\r\n//transform collections fetched from database\r\nexport const transformCollectionMap = (collections) =>{\r\n        console.log(collections);\r\n        const collectionMap =  collections.doc.map( doc => {\r\n               const {title,items} = doc.data;\r\n \r\n               return{\r\n                 routeName: encodeURI(title.toLowerCase()),\r\n                 id: doc.id,\r\n                 title,\r\n                 items\r\n               }  \r\n         });\r\n \r\n         return collectionMap.reduce((accumulator,collection) => {\r\n                 accumulator[collection.title.toLowerCase()] = collection;\r\n                 return accumulator;\r\n         },{});\r\n }\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}