{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { userActionTypes } from './User.Types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../Firebase/Firebase.Utils';\nimport { signInFailed, signInSuccess, logoutSuccess, logoutFailed, signupSuccess, signupFailed } from './User.Action'; //sign in saga used by other authentication sagas\n\nfunction* signIn(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShopt = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShopt.id,\n      ...userSnapShopt.data()\n    }));\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n} //sign in with googgle saga\n\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.LOGIN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield call(signIn, user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n} //sign in with email saga\n\nexport function* onEmailPasswordSignInStart() {\n  yield takeLatest(userActionTypes.LOGIN_WITH_EMAIL_PASSWORD_START, emailPasswordSignIn);\n}\nexport function* emailPasswordSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield call(signIn, user);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n} //Checking session Saga\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const authUser = yield getCurrentUser();\n\n    if (!authUser) {\n      return;\n    }\n\n    yield call(signIn, authUser);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n} //log out saga\n\nexport function* onLogOut() {\n  yield takeLatest(userActionTypes.LOGOUT_START, logOut);\n}\nexport function* logOut() {\n  try {\n    yield auth.signOut();\n    yield put(logoutSuccess());\n  } catch (error) {\n    yield put(logoutFailed(error));\n  }\n} //Sign uo saga\n\nexport function* onSignUp() {\n  yield takeLatest(userActionTypes.SIGNUP_START, signUp);\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    console.log(user);\n    yield call(createUserProfileDocument, user, {\n      displayName\n    });\n    yield put(signupSuccess());\n  } catch (error) {\n    yield put(signupFailed(error));\n  }\n} //combining all sagas\n\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailPasswordSignInStart), call(onCheckUserSession), call(onLogOut), call(onSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/SEWA/Desktop/Udemy Courses/React/cwn-clothing/src/Redux/User/User.Sagas.js"],"names":["takeLatest","call","put","all","userActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInFailed","signInSuccess","logoutSuccess","logoutFailed","signupSuccess","signupFailed","signIn","user","userRef","userSnapShopt","get","id","data","error","onGoogleSignInStart","LOGIN_WITH_GOOGLE_START","signInWithGoogle","signInWithPopup","onEmailPasswordSignInStart","LOGIN_WITH_EMAIL_PASSWORD_START","emailPasswordSignIn","payload","email","password","signInWithEmailAndPassword","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","authUser","onLogOut","LOGOUT_START","logOut","signOut","onSignUp","SIGNUP_START","signUp","displayName","createUserWithEmailAndPassword","console","log","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest,call,put,all} from 'redux-saga/effects';\r\nimport { userActionTypes }  from './User.Types';\r\nimport { googleProvider,auth,createUserProfileDocument,getCurrentUser } from '../../Firebase/Firebase.Utils';\r\nimport { signInFailed, signInSuccess, logoutSuccess, logoutFailed, signupSuccess, signupFailed } from './User.Action';\r\n\r\n//sign in saga used by other authentication sagas\r\nfunction*  signIn(user){\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument,user);\r\n        const userSnapShopt = yield userRef.get();\r\n\r\n        yield put(signInSuccess({id: userSnapShopt.id,...userSnapShopt.data()}))\r\n\r\n    } catch (error) {\r\n       yield put(signInFailed(error));\r\n    }\r\n}\r\n\r\n//sign in with googgle saga\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(userActionTypes.LOGIN_WITH_GOOGLE_START,signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield call(signIn,user);\r\n\r\n    } catch (error) {\r\n       yield put(signInFailed(error));\r\n    }\r\n}\r\n\r\n//sign in with email saga\r\nexport function* onEmailPasswordSignInStart(){\r\n    yield takeLatest(userActionTypes.LOGIN_WITH_EMAIL_PASSWORD_START,emailPasswordSignIn);\r\n}\r\n\r\nexport function* emailPasswordSignIn({payload:{email,password}}){\r\n    try {\r\n\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield call(signIn,user);\r\n\r\n    } catch (error) {\r\n       yield put(signInFailed(error));\r\n    }\r\n}\r\n\r\n//Checking session Saga\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION,isUserAuthenticated);\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n     try {\r\n         const authUser = yield getCurrentUser();\r\n         if(!authUser){\r\n             return;\r\n         }\r\n         yield call(signIn,authUser);\r\n     } catch (error) {\r\n         yield put(signInFailed(error));\r\n     }\r\n}\r\n\r\n//log out saga\r\nexport function* onLogOut(){\r\n    yield takeLatest(userActionTypes.LOGOUT_START,logOut);\r\n}\r\n\r\nexport function* logOut(){\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(logoutSuccess());\r\n    } catch (error) {\r\n        yield put(logoutFailed(error));\r\n    }\r\n}\r\n\r\n//Sign uo saga\r\n\r\nexport function* onSignUp(){\r\n    yield takeLatest(userActionTypes.SIGNUP_START, signUp);\r\n}\r\n\r\nexport function* signUp({payload:{displayName,email,password}}){\r\n\r\n     try {\r\n            const {user} = yield auth.createUserWithEmailAndPassword(email,password);         \r\n            console.log(user);\r\n            yield call(createUserProfileDocument,user,{displayName});\r\n\r\n            yield put(signupSuccess());\r\n            \r\n        } catch (error) {\r\n            yield put(signupFailed(error));\r\n        }\r\n}\r\n\r\n//combining all sagas\r\nexport function* userSaga(){\r\n    yield all([ call(onGoogleSignInStart),\r\n                call(onEmailPasswordSignInStart),\r\n                call(onCheckUserSession),\r\n                call(onLogOut),\r\n                call(onSignUp)\r\n            ]);\r\n}"]},"metadata":{},"sourceType":"module"}